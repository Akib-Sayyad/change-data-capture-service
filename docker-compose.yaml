version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
    networks:
      - kafka-net

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    depends_on:
      - kafka
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "connect-cluster"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
    ports:
      - 8083:8083
    networks:
      - kafka-net

  postgres-source:
    image: postgres:latest
    environment:
      POSTGRES_DB: source_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    networks:
      - kafka-net

  postgres-target:
    image: postgres:latest
    environment:
      POSTGRES_DB: target_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - 5433:5432
    networks:
      - kafka-net

  change-data-capture-service:
    build: .
    ports:
      - 8080:8080
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - kafka-net
    depends_on:
      - kafka-connect
      - postgres-source
      - postgres-target

networks:
  kafka-net:
    driver: bridge
